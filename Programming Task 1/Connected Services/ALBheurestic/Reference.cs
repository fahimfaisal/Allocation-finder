//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AllocationsApplication.ALBheurestic {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeoutFault", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TimeoutFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ALBheurestic.IHueresticService")]
    public interface IHueresticService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHueresticService/HeuresticAlg", ReplyAction="http://tempuri.org/IHueresticService/HeuresticAlgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AllocationsApplication.ALBheurestic.TimeoutFault), Action="http://tempuri.org/IHueresticService/HeuresticAlgTimeoutFaultFault", Name="TimeoutFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        WcfServiceLibrary.AllocationData HeuresticAlg(int deadline, WcfServiceLibrary.ConfigData cd, int task);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHueresticService/HeuresticAlg", ReplyAction="http://tempuri.org/IHueresticService/HeuresticAlgResponse")]
        System.IAsyncResult BeginHeuresticAlg(int deadline, WcfServiceLibrary.ConfigData cd, int task, System.AsyncCallback callback, object asyncState);
        
        WcfServiceLibrary.AllocationData EndHeuresticAlg(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHueresticServiceChannel : AllocationsApplication.ALBheurestic.IHueresticService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeuresticAlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HeuresticAlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WcfServiceLibrary.AllocationData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WcfServiceLibrary.AllocationData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HueresticServiceClient : System.ServiceModel.ClientBase<AllocationsApplication.ALBheurestic.IHueresticService>, AllocationsApplication.ALBheurestic.IHueresticService {
        
        private BeginOperationDelegate onBeginHeuresticAlgDelegate;
        
        private EndOperationDelegate onEndHeuresticAlgDelegate;
        
        private System.Threading.SendOrPostCallback onHeuresticAlgCompletedDelegate;
        
        public HueresticServiceClient() {
        }
        
        public HueresticServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HueresticServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HueresticServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HueresticServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<HeuresticAlgCompletedEventArgs> HeuresticAlgCompleted;
        
        public WcfServiceLibrary.AllocationData HeuresticAlg(int deadline, WcfServiceLibrary.ConfigData cd, int task) {
            return base.Channel.HeuresticAlg(deadline, cd, task);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHeuresticAlg(int deadline, WcfServiceLibrary.ConfigData cd, int task, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHeuresticAlg(deadline, cd, task, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WcfServiceLibrary.AllocationData EndHeuresticAlg(System.IAsyncResult result) {
            return base.Channel.EndHeuresticAlg(result);
        }
        
        private System.IAsyncResult OnBeginHeuresticAlg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int deadline = ((int)(inValues[0]));
            WcfServiceLibrary.ConfigData cd = ((WcfServiceLibrary.ConfigData)(inValues[1]));
            int task = ((int)(inValues[2]));
            return this.BeginHeuresticAlg(deadline, cd, task, callback, asyncState);
        }
        
        private object[] OnEndHeuresticAlg(System.IAsyncResult result) {
            WcfServiceLibrary.AllocationData retVal = this.EndHeuresticAlg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHeuresticAlgCompleted(object state) {
            if ((this.HeuresticAlgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HeuresticAlgCompleted(this, new HeuresticAlgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HeuresticAlgAsync(int deadline, WcfServiceLibrary.ConfigData cd, int task) {
            this.HeuresticAlgAsync(deadline, cd, task, null);
        }
        
        public void HeuresticAlgAsync(int deadline, WcfServiceLibrary.ConfigData cd, int task, object userState) {
            if ((this.onBeginHeuresticAlgDelegate == null)) {
                this.onBeginHeuresticAlgDelegate = new BeginOperationDelegate(this.OnBeginHeuresticAlg);
            }
            if ((this.onEndHeuresticAlgDelegate == null)) {
                this.onEndHeuresticAlgDelegate = new EndOperationDelegate(this.OnEndHeuresticAlg);
            }
            if ((this.onHeuresticAlgCompletedDelegate == null)) {
                this.onHeuresticAlgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHeuresticAlgCompleted);
            }
            base.InvokeAsync(this.onBeginHeuresticAlgDelegate, new object[] {
                        deadline,
                        cd,
                        task}, this.onEndHeuresticAlgDelegate, this.onHeuresticAlgCompletedDelegate, userState);
        }
    }
}
